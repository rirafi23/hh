import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import HeaderPage from './header'
import Card_page from "./product/index"

const img_content = ["/img-cth1.jpg","/img-cth2.jpg","/img-cth3.jpg"]
// database
import firestore from "../firebase/clientApp";
import {collection,QueryDocumentSnapshot,DocumentData,query,where,limit,getDocs, updateDoc, doc, deleteDoc} from "@firebase/firestore";
import { Router, useRouter } from 'next/router'
import PageNull from './page_null'

const ProductCollection = collection(firestore,"product_table");
const KategoriCollection = collection(firestore,"kategori_product");

export default function Home() {
  const [img_conten, setimg_conten] = useState(0)
  const [on_categori, seton_categori] = useState(1)
  const [data_product, setdata_product] = useState([])
  const [category_base, setcategory_base] = useState([])
  const router = useRouter()

  useEffect(()=>{
    img_slide(0)
    getKategori()
  },[])

  const img_slide = (a) => {
    setimg_conten(a)
    setTimeout(() => {
      if(a === img_content.length - 1){
        img_slide(0)
      }else{
        img_slide(a + 1)
      }
    },30000);
  }
  const getKategori = async () => {
    const base = []
     const Query = query(KategoriCollection);
     const querySnapshot = await getDocs(Query); 
     querySnapshot.forEach((snapshot) => {
         var a = snapshot
          base.push(a)
     });
     if(base.length !== 0){
      setcategory_base(base)
    }
    getData(base[0].id)
    seton_categori(base[0].id)
  };
  const getData = async (ref) => {
    const base_product = []
     const Query = query(ProductCollection);
     const querySnapshot = await getDocs(Query); 
     querySnapshot.forEach((snapshot) => {
         var a = snapshot
          base_product.push(a)
     });
     const fil = base_product.filter(a=>a.data().category === ref)
     if(fil.length !== 0){
       setdata_product(fil)
     }else{
       setdata_product([])
     }
  };

  const content_slide = (a) => {
    return(
      <div key={1} style={{backgroundImage: `url(${img_content[img_conten]})`}} className={styles.content}>
        <div className={styles.content_absolute}>
          <p className={styles.content_text}>{parseInt(img_conten)+1} / {img_content.length}</p>
        </div>
      </div>
    )
  }

  const onPress = (res) => {
    seton_categori(res)
    getData(res)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HeaderPage/>
      {content_slide()}
      <div className={styles.main}>
        <div className={styles.main_header2}>
          {category_base.map((a,b)=>{
            return b === 0 ? (
              <button onClick={()=>onPress(a.id)} style={a.id === on_categori ? {backgroundColor:"white"}:null} className={styles.card_main_header3}>
                {a.data().name}
              </button>
            ):(
              <button onClick={()=>onPress(a.id)} style={a.id === on_categori ? {backgroundColor:"white"}:null} className={styles.card_main_header3}>
                {a.data().name}
              </button>
            )
          })}
        </div>
        {/* /////////////////////////// */}
        <div className={styles.main_header}>
          {category_base.map((a,b)=>{
            return b === 0 ? (
              <button onClick={()=>onPress(a.id)} style={a.id === on_categori ? {backgroundColor:"white"}:null} className={styles.card_main_header1}>
                {a.data().name}
              </button>
            ):(
              <button onClick={()=>onPress(a.id)} style={a.id === on_categori ? {backgroundColor:"white"}:null} className={styles.card_main_header}>
                {a.data().name}
              </button>
            )
          })}
        </div>
        {data_product.length === 0 ? (
          <div className={styles.card_null}><PageNull message={"Item Product Tidak ada"}/></div>
        ):(
        <div className={styles.main_main}>
          {data_product.map((a,b)=>{
            return <Card_page key={a.id} onPress={()=>router.push({pathname:"/product/show", query:{ref_id:a.id, ref_query:"show"}})} data={a}/>
          })}
        </div>
        )}
      </div>
    </div>
  )
}

